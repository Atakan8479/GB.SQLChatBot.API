apiVersion: v1
kind: Service
metadata:
  name: "gb-sqlchatbot-service-preprod"
  namespace: "gbsqlchatbot"
  labels:
    name: "gb-sqlchatbot-service-preprod"
spec:
  type: "ClusterIP"
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: "gb-sqlchatbot-service-preprod"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "gb-sqlchatbot-service-preprod"
  namespace: "gbsqlchatbot"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  selector:
    matchLabels:
      app: "gb-sqlchatbot-service-preprod"
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'true'   
      labels:
        app: "gb-sqlchatbot-service-preprod"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: worker
                operator: In
                values:
                - "true"
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: preprod
        - name: OTEL_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: SERVICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ParsCore_ThreadPoolMinWorkerThreads
          value: "200"
        - name: ParsCore_ThreadPoolMinCompletionPortThreads
          value: "200"
        - name: StsOpenId__Authority
          value: https://stslive.lcwaikiki.com/sts
        - name: ServiceHost
          valueFrom:
            secretKeyRef:
              key: ServiceHost
              name: gbsqlchatbot-common
        - name: ConfigSource
          valueFrom:
            secretKeyRef:
              key: ConfigSource
              name: gbsqlchatbot-common
        - name: Logging__LogLevel__Default
          value: Information
        image: "mymharbor.lcwaikiki.local/gb/gb-sqlchatbot-service-dev:__DOCKERIMGVER__"
        imagePullPolicy: Always
        name: "gb-sqlchatbot-service"
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe: # is the container healthy?
          tcpSocket:
            port: 8080
          timeoutSeconds: 15
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 1
        readinessProbe: # is the container ready to receive traffic?
          httpGet:
            port: 8080
            path: /ping
          timeoutSeconds: 15
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 1
        startupProbe:
          httpGet:
            path: /startup/init
            port: 8080
            scheme: HTTP
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 15
          periodSeconds: 20
        securityContext:
          runAsUser: 2000
          allowPrivilegeEscalation: false
      imagePullSecrets:
        - name: gbregistry
      restartPolicy: Always
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata: 
  name: gb-sqlchatbot-service
  namespace: cs-shared
spec: 
  gateways: 
    - mymgateway
  hosts: 
    - gbsqlchatbot-preprod.apis.test.lcwaikiki.com
  http: 
    - 
      match: 
        - 
          uri: 
            prefix: /xxxx/xxxxx/
      rewrite: 
        uri: /
      route: 
        - 
          destination: 
            host: gb-sqlchatbot-service-preprod.gbsqlchatbot.svc.cluster.local
          weight: 20
        - 
          destination: 
            host: gb-sqlchatbot-service.gbsqlchatbot.svc.cluster.local
          weight: 80